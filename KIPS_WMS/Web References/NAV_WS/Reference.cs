//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8670
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8670.
// 
namespace KIPS_WMS.NAV_WS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileWMSSync_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync")]
    public partial class MobileWMSSync : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public MobileWMSSync() {
            this.Url = "http://sqlserver:7047/Wurth/ws/Wurth/Codeunit/MobileWMSSync";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:LogIn", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="LogIn_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogIn(string usernameP, string passwordP, ref string cSVStringP) {
            object[] results = this.Invoke("LogIn", new object[] {
                        usernameP,
                        passwordP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogIn(string usernameP, string passwordP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogIn", new object[] {
                        usernameP,
                        passwordP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogIn(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:SetDocumentStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="SetDocumentStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDocumentStatus(int documentTypeP, string documentNoP, int statusP) {
            this.Invoke("SetDocumentStatus", new object[] {
                        documentTypeP,
                        documentNoP,
                        statusP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDocumentStatus(int documentTypeP, string documentNoP, int statusP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDocumentStatus", new object[] {
                        documentTypeP,
                        documentNoP,
                        statusP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDocumentStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetQuote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetQuote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetQuote(string documentNoP, string userIdP, string locationCodeP, ref string customerCodeP, ref string customerNameP, ref int isAuthenticatedCustomerP, ref string cSVStringP) {
            object[] results = this.Invoke("GetQuote", new object[] {
                        documentNoP,
                        userIdP,
                        locationCodeP,
                        customerCodeP,
                        customerNameP,
                        isAuthenticatedCustomerP,
                        cSVStringP});
            customerCodeP = ((string)(results[0]));
            customerNameP = ((string)(results[1]));
            isAuthenticatedCustomerP = ((int)(results[2]));
            cSVStringP = ((string)(results[3]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuote(string documentNoP, string userIdP, string locationCodeP, string customerCodeP, string customerNameP, int isAuthenticatedCustomerP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuote", new object[] {
                        documentNoP,
                        userIdP,
                        locationCodeP,
                        customerCodeP,
                        customerNameP,
                        isAuthenticatedCustomerP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetQuote(System.IAsyncResult asyncResult, out string customerCodeP, out string customerNameP, out int isAuthenticatedCustomerP, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            customerCodeP = ((string)(results[0]));
            customerNameP = ((string)(results[1]));
            isAuthenticatedCustomerP = ((int)(results[2]));
            cSVStringP = ((string)(results[3]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:SendQuote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="SendQuote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQuote(string userIdP, string locationCodeP, ref string documentNoP, string customerNoP, int isAuthenticatedCustomerP, string cSVStringLinesP, ref int statusP, ref int creditLimitOverdoP) {
            object[] results = this.Invoke("SendQuote", new object[] {
                        userIdP,
                        locationCodeP,
                        documentNoP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        cSVStringLinesP,
                        statusP,
                        creditLimitOverdoP});
            documentNoP = ((string)(results[0]));
            statusP = ((int)(results[1]));
            creditLimitOverdoP = ((int)(results[2]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendQuote(string userIdP, string locationCodeP, string documentNoP, string customerNoP, int isAuthenticatedCustomerP, string cSVStringLinesP, int statusP, int creditLimitOverdoP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendQuote", new object[] {
                        userIdP,
                        locationCodeP,
                        documentNoP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        cSVStringLinesP,
                        statusP,
                        creditLimitOverdoP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendQuote(System.IAsyncResult asyncResult, out string documentNoP, out int statusP, out int creditLimitOverdoP) {
            object[] results = this.EndInvoke(asyncResult);
            documentNoP = ((string)(results[0]));
            statusP = ((int)(results[1]));
            creditLimitOverdoP = ((int)(results[2]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetCustomerCreditLimit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetCustomerCreditLimit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomerCreditLimit(string userIdP, string customerCodeP, ref string creditLimitP, ref string usedCreditLimitP) {
            object[] results = this.Invoke("GetCustomerCreditLimit", new object[] {
                        userIdP,
                        customerCodeP,
                        creditLimitP,
                        usedCreditLimitP});
            creditLimitP = ((string)(results[0]));
            usedCreditLimitP = ((string)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerCreditLimit(string userIdP, string customerCodeP, string creditLimitP, string usedCreditLimitP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerCreditLimit", new object[] {
                        userIdP,
                        customerCodeP,
                        creditLimitP,
                        usedCreditLimitP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetCustomerCreditLimit(System.IAsyncResult asyncResult, out string creditLimitP, out string usedCreditLimitP) {
            object[] results = this.EndInvoke(asyncResult);
            creditLimitP = ((string)(results[0]));
            usedCreditLimitP = ((string)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemInformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemInformation(string itemNoa47BarCodeP, string variantCodeP, string customerNoP, int isAuthenticatedCustomerP, string locationCodeP, string userIdP, ref string cSVStringP) {
            object[] results = this.Invoke("GetItemInformation", new object[] {
                        itemNoa47BarCodeP,
                        variantCodeP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        locationCodeP,
                        userIdP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemInformation(string itemNoa47BarCodeP, string variantCodeP, string customerNoP, int isAuthenticatedCustomerP, string locationCodeP, string userIdP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemInformation", new object[] {
                        itemNoa47BarCodeP,
                        variantCodeP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        locationCodeP,
                        userIdP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemInformation(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemPriceAndInventory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemPriceAndInventory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemPriceAndInventory(string itemNoP, string variantCodeP, string unitOfMeasureP, string salesQtyP, string customerNoP, int isAuthenticatedCustomerP, string locationCodeP, string userIdP, ref string cSVStringP) {
            object[] results = this.Invoke("GetItemPriceAndInventory", new object[] {
                        itemNoP,
                        variantCodeP,
                        unitOfMeasureP,
                        salesQtyP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        locationCodeP,
                        userIdP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemPriceAndInventory(string itemNoP, string variantCodeP, string unitOfMeasureP, string salesQtyP, string customerNoP, int isAuthenticatedCustomerP, string locationCodeP, string userIdP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemPriceAndInventory", new object[] {
                        itemNoP,
                        variantCodeP,
                        unitOfMeasureP,
                        salesQtyP,
                        customerNoP,
                        isAuthenticatedCustomerP,
                        locationCodeP,
                        userIdP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemPriceAndInventory(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemUnitsOfMeasure", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemUnitsOfMeasure_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemUnitsOfMeasure(string itemNoP, string userIdP, string locationCodeP, ref string cSVStringP) {
            object[] results = this.Invoke("GetItemUnitsOfMeasure", new object[] {
                        itemNoP,
                        userIdP,
                        locationCodeP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemUnitsOfMeasure(string itemNoP, string userIdP, string locationCodeP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemUnitsOfMeasure", new object[] {
                        itemNoP,
                        userIdP,
                        locationCodeP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemUnitsOfMeasure(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemLagerList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemLagerList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemLagerList(string itemNoP, string variantCodeP, string trackingCodeP, string locationCodeP, ref string cSVStringP) {
            object[] results = this.Invoke("GetItemLagerList", new object[] {
                        itemNoP,
                        variantCodeP,
                        trackingCodeP,
                        locationCodeP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemLagerList(string itemNoP, string variantCodeP, string trackingCodeP, string locationCodeP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemLagerList", new object[] {
                        itemNoP,
                        variantCodeP,
                        trackingCodeP,
                        locationCodeP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemLagerList(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItems", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItems_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItems(ref string cSVStringP, string itemNoP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastDateModifiedP) {
            object[] results = this.Invoke("GetItems", new object[] {
                        cSVStringP,
                        itemNoP,
                        lastDateModifiedP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItems(string cSVStringP, string itemNoP, System.DateTime lastDateModifiedP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItems", new object[] {
                        cSVStringP,
                        itemNoP,
                        lastDateModifiedP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItems(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetCustomers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetCustomers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomers(ref string cSVStringP, string customerNoP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastDateModifiedP) {
            object[] results = this.Invoke("GetCustomers", new object[] {
                        cSVStringP,
                        customerNoP,
                        lastDateModifiedP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomers(string cSVStringP, string customerNoP, System.DateTime lastDateModifiedP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomers", new object[] {
                        cSVStringP,
                        customerNoP,
                        lastDateModifiedP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetCustomers(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehouseReceipts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehouseReceipts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehouseReceipts(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehouseReceipts", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehouseReceipts(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehouseReceipts", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehouseReceipts(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehouseReceiptLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehouseReceiptLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehouseReceiptLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsReceiptNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehouseReceiptLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsReceiptNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehouseReceiptLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsReceiptNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehouseReceiptLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsReceiptNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehouseReceiptLines(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetReceiptLineQtyToReceive", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetReceiptLineQtyToReceive_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetReceiptLineQtyToReceive(string userIdP, string whsReceiptNoP, int whsReceiptLineNoP, ref string qtyToReceiveP) {
            object[] results = this.Invoke("GetReceiptLineQtyToReceive", new object[] {
                        userIdP,
                        whsReceiptNoP,
                        whsReceiptLineNoP,
                        qtyToReceiveP});
            qtyToReceiveP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiptLineQtyToReceive(string userIdP, string whsReceiptNoP, int whsReceiptLineNoP, string qtyToReceiveP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiptLineQtyToReceive", new object[] {
                        userIdP,
                        whsReceiptNoP,
                        whsReceiptLineNoP,
                        qtyToReceiveP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetReceiptLineQtyToReceive(System.IAsyncResult asyncResult, out string qtyToReceiveP) {
            object[] results = this.EndInvoke(asyncResult);
            qtyToReceiveP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:UpdateWarehouseReceiptLineQ" +
            "ty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="UpdateWarehouseReceiptLineQty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWarehouseReceiptLineQty(string userIdP, string whsReceiptNoP, int whsReceiptLineNoP, string qtyP, int isUpdateP, string trackingCSVStringP, string normCSVStringP, string scannedUoMCodeP, string qtyInScannedUoMP) {
            this.Invoke("UpdateWarehouseReceiptLineQty", new object[] {
                        userIdP,
                        whsReceiptNoP,
                        whsReceiptLineNoP,
                        qtyP,
                        isUpdateP,
                        trackingCSVStringP,
                        normCSVStringP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWarehouseReceiptLineQty(string userIdP, string whsReceiptNoP, int whsReceiptLineNoP, string qtyP, int isUpdateP, string trackingCSVStringP, string normCSVStringP, string scannedUoMCodeP, string qtyInScannedUoMP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWarehouseReceiptLineQty", new object[] {
                        userIdP,
                        whsReceiptNoP,
                        whsReceiptLineNoP,
                        qtyP,
                        isUpdateP,
                        trackingCSVStringP,
                        normCSVStringP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateWarehouseReceiptLineQty(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:UpdateDamagedIncomplete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="UpdateDamagedIncomplete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDamagedIncomplete(string userIdP, string documentNoP, int documentLineNoP, string damagedQtyP, string incompleteQtyP) {
            this.Invoke("UpdateDamagedIncomplete", new object[] {
                        userIdP,
                        documentNoP,
                        documentLineNoP,
                        damagedQtyP,
                        incompleteQtyP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDamagedIncomplete(string userIdP, string documentNoP, int documentLineNoP, string damagedQtyP, string incompleteQtyP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDamagedIncomplete", new object[] {
                        userIdP,
                        documentNoP,
                        documentLineNoP,
                        damagedQtyP,
                        incompleteQtyP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateDamagedIncomplete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehousePutAways", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehousePutAways_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehousePutAways(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehousePutAways", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehousePutAways(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehousePutAways", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehousePutAways(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehousePutAwayLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehousePutAwayLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehousePutAwayLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsPutAwayNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehousePutAwayLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsPutAwayNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehousePutAwayLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsPutAwayNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehousePutAwayLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsPutAwayNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehousePutAwayLines(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetPutAwayQtyToHandle", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetPutAwayQtyToHandle_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPutAwayQtyToHandle(string userIdP, string putAwayNoP, int putAwayLineNoP, ref string qtyToHandleP) {
            object[] results = this.Invoke("GetPutAwayQtyToHandle", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyToHandleP});
            qtyToHandleP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPutAwayQtyToHandle(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyToHandleP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPutAwayQtyToHandle", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyToHandleP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetPutAwayQtyToHandle(System.IAsyncResult asyncResult, out string qtyToHandleP) {
            object[] results = this.EndInvoke(asyncResult);
            qtyToHandleP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:UpdatePutAwayLineQty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="UpdatePutAwayLineQty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePutAwayLineQty(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyP, int isUpdateP, string scannedUoMCodeP, string qtyInScannedUoMP) {
            this.Invoke("UpdatePutAwayLineQty", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyP,
                        isUpdateP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePutAwayLineQty(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyP, int isUpdateP, string scannedUoMCodeP, string qtyInScannedUoMP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePutAwayLineQty", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyP,
                        isUpdateP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdatePutAwayLineQty(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehousePicks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehousePicks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehousePicks(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehousePicks", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehousePicks(string userIdP, string locationCodeP, string sublocationCodeP, string itemNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehousePicks", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        itemNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehousePicks(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetWarehousePickLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetWarehousePickLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWarehousePickLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsPutAwayNoP, ref string cSVStringP) {
            object[] results = this.Invoke("GetWarehousePickLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsPutAwayNoP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehousePickLines(string userIdP, string locationCodeP, string sublocationCodeP, string whsPutAwayNoP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehousePickLines", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        whsPutAwayNoP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetWarehousePickLines(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetPickLineQtyToHandle", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetPickLineQtyToHandle_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPickLineQtyToHandle(string userIdP, string putAwayNoP, int putAwayLineNoP, ref string qtyToHandleP) {
            object[] results = this.Invoke("GetPickLineQtyToHandle", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyToHandleP});
            qtyToHandleP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickLineQtyToHandle(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyToHandleP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickLineQtyToHandle", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyToHandleP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetPickLineQtyToHandle(System.IAsyncResult asyncResult, out string qtyToHandleP) {
            object[] results = this.EndInvoke(asyncResult);
            qtyToHandleP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:UpdatePickLineQty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="UpdatePickLineQty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePickLineQty(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyP, int isUpdateP, string scannedUoMCodeP, string qtyInScannedUoMP) {
            this.Invoke("UpdatePickLineQty", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyP,
                        isUpdateP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePickLineQty(string userIdP, string putAwayNoP, int putAwayLineNoP, string qtyP, int isUpdateP, string scannedUoMCodeP, string qtyInScannedUoMP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePickLineQty", new object[] {
                        userIdP,
                        putAwayNoP,
                        putAwayLineNoP,
                        qtyP,
                        isUpdateP,
                        scannedUoMCodeP,
                        qtyInScannedUoMP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdatePickLineQty(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:BinToBinMovement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="BinToBinMovement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BinToBinMovement(string itemNoP, string qtyAsTxtP, string unitOfMeasureCodeP, string locationCodeP, string sublocationCodeP, string fromBinCodeP, string toBinCodeP, string userIdP, string trackingCSVStringP, ref int nAVLineNoP) {
            object[] results = this.Invoke("BinToBinMovement", new object[] {
                        itemNoP,
                        qtyAsTxtP,
                        unitOfMeasureCodeP,
                        locationCodeP,
                        sublocationCodeP,
                        fromBinCodeP,
                        toBinCodeP,
                        userIdP,
                        trackingCSVStringP,
                        nAVLineNoP});
            nAVLineNoP = ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBinToBinMovement(string itemNoP, string qtyAsTxtP, string unitOfMeasureCodeP, string locationCodeP, string sublocationCodeP, string fromBinCodeP, string toBinCodeP, string userIdP, string trackingCSVStringP, int nAVLineNoP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BinToBinMovement", new object[] {
                        itemNoP,
                        qtyAsTxtP,
                        unitOfMeasureCodeP,
                        locationCodeP,
                        sublocationCodeP,
                        fromBinCodeP,
                        toBinCodeP,
                        userIdP,
                        trackingCSVStringP,
                        nAVLineNoP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBinToBinMovement(System.IAsyncResult asyncResult, out int nAVLineNoP) {
            object[] results = this.EndInvoke(asyncResult);
            nAVLineNoP = ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemFromAnotherBin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemFromAnotherBin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemFromAnotherBin(ref string linesCSV, string docNo, string lineNo, string userID) {
            object[] results = this.Invoke("GetItemFromAnotherBin", new object[] {
                        linesCSV,
                        docNo,
                        lineNo,
                        userID});
            linesCSV = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemFromAnotherBin(string linesCSV, string docNo, string lineNo, string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemFromAnotherBin", new object[] {
                        linesCSV,
                        docNo,
                        lineNo,
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemFromAnotherBin(System.IAsyncResult asyncResult, out string linesCSV) {
            object[] results = this.EndInvoke(asyncResult);
            linesCSV = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:DeleteReclassificationLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="DeleteReclassificationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReclassificationLines(int lineNoP, string userID, string locationCodeP, string sublocationCodeP, int deleteAllLinesP) {
            this.Invoke("DeleteReclassificationLines", new object[] {
                        lineNoP,
                        userID,
                        locationCodeP,
                        sublocationCodeP,
                        deleteAllLinesP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteReclassificationLines(int lineNoP, string userID, string locationCodeP, string sublocationCodeP, int deleteAllLinesP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteReclassificationLines", new object[] {
                        lineNoP,
                        userID,
                        locationCodeP,
                        sublocationCodeP,
                        deleteAllLinesP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteReclassificationLines(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:PostReclassification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="PostReclassification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostReclassification(string userIdP, string locationCodeP, string sublocationCodeP, ref int statusP) {
            object[] results = this.Invoke("PostReclassification", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        statusP});
            statusP = ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostReclassification(string userIdP, string locationCodeP, string sublocationCodeP, int statusP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostReclassification", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        statusP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPostReclassification(System.IAsyncResult asyncResult, out int statusP) {
            object[] results = this.EndInvoke(asyncResult);
            statusP = ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:GetItemBinContent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="GetItemBinContent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetItemBinContent(string userIdP, string locationCodeP, string sublocationCodeP, string binCodeP, string itemNoP, string variantCodeP, ref string cSVStringP) {
            object[] results = this.Invoke("GetItemBinContent", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        binCodeP,
                        itemNoP,
                        variantCodeP,
                        cSVStringP});
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemBinContent(string userIdP, string locationCodeP, string sublocationCodeP, string binCodeP, string itemNoP, string variantCodeP, string cSVStringP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemBinContent", new object[] {
                        userIdP,
                        locationCodeP,
                        sublocationCodeP,
                        binCodeP,
                        itemNoP,
                        variantCodeP,
                        cSVStringP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetItemBinContent(System.IAsyncResult asyncResult, out string cSVStringP) {
            object[] results = this.EndInvoke(asyncResult);
            cSVStringP = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:ChangeBinOnDocumentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="ChangeBinOnDocumentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeBinOnDocumentLine(string userIdP, int documentTypeP, string documentNoP, int documentLineNoP, string newBinCodeP) {
            this.Invoke("ChangeBinOnDocumentLine", new object[] {
                        userIdP,
                        documentTypeP,
                        documentNoP,
                        documentLineNoP,
                        newBinCodeP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeBinOnDocumentLine(string userIdP, int documentTypeP, string documentNoP, int documentLineNoP, string newBinCodeP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeBinOnDocumentLine", new object[] {
                        userIdP,
                        documentTypeP,
                        documentNoP,
                        documentLineNoP,
                        newBinCodeP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeBinOnDocumentLine(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:SplitDocumentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="SplitDocumentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SplitDocumentLine(string userIdP, int documentTypeP, string documentNoP, int documentLineNoP, ref int newDocumentLineNoP) {
            object[] results = this.Invoke("SplitDocumentLine", new object[] {
                        userIdP,
                        documentTypeP,
                        documentNoP,
                        documentLineNoP,
                        newDocumentLineNoP});
            newDocumentLineNoP = ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSplitDocumentLine(string userIdP, int documentTypeP, string documentNoP, int documentLineNoP, int newDocumentLineNoP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SplitDocumentLine", new object[] {
                        userIdP,
                        documentTypeP,
                        documentNoP,
                        documentLineNoP,
                        newDocumentLineNoP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSplitDocumentLine(System.IAsyncResult asyncResult, out int newDocumentLineNoP) {
            object[] results = this.EndInvoke(asyncResult);
            newDocumentLineNoP = ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync:TestItemHasTracking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", ResponseElementName="TestItemHasTracking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/MobileWMSSync", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestItemHasTracking(string itemNoP, ref int trackingTypeP) {
            object[] results = this.Invoke("TestItemHasTracking", new object[] {
                        itemNoP,
                        trackingTypeP});
            trackingTypeP = ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestItemHasTracking(string itemNoP, int trackingTypeP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestItemHasTracking", new object[] {
                        itemNoP,
                        trackingTypeP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndTestItemHasTracking(System.IAsyncResult asyncResult, out int trackingTypeP) {
            object[] results = this.EndInvoke(asyncResult);
            trackingTypeP = ((int)(results[0]));
        }
    }
}
